name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

env:
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-24.04]

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code üõé
        uses: actions/checkout@v3

      - name: Set up JDK 21 üèó
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages üì¶
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies üë®üèª‚Äçüíª
        run: mvn clean install -Dspring.profiles.active=test

      - name: Wait for PostgreSQL ‚è≥
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres; then
              echo "PostgreSQL is ready"
              break
            fi
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Run tests üß™
        env:
          APP_PORT: 8080
          DB_URL: jdbc:postgresql://localhost:5432/workshop
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_DRIVER: org.postgresql.Driver
          DB_DIALECT: org.hibernate.dialect.PostgreSQLDialect
          DB_SHOW_SQL: false
#          MAIL_HOST: smtp.example.com
#          MAIL_PORT: 587
#          MAIL_USERNAME: your-email@example.com
#          MAIL_PASSWORD: your-email-password
#          CONFIRMATION_URL: http://localhost:8080/confirm
#          JWT_SECRET_KEY: your-secret-key
#          JWT_ACCESS_TOKEN_EXPIRATION: 86400000
#          JWT_REFRESH_TOKEN_EXPIRATION: 604800000
        run: mvn -X test
